version: 2
jobs:

  # build the project, run tests, upload reports and artifacts
  build:
    docker:
      - image: circleci/openjdk:8-jdk-browsers

    environment:
      # put your codeclimate reporter ID here
      CC_TEST_REPORTER_ID: e4c6ab4c2659471970a714534d44bd556594fa25eaf7db053f16b1e8f0d441da

    steps:
      - checkout

      - run:
          name: Generate signing key
          command: scripts/generate-signing-key.sh

      # download the code climate CLI
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Build project
          command: ./gradlew --info --refresh-dependencies clean build

      - store_test_results:
          path: build/test-results/test

      - store_artifacts:
          path: build/reports
          destination: reports

      # upload the coverage report to code climate
      - run:
          name: Upload coverage to code climate
          command: |
            export JACOCO_SOURCE_PATH=src/main/java
            ./cc-test-reporter format-coverage build/reports/jacoco/test/jacocoTestReport.xml -t jacoco
            ./cc-test-reporter upload-coverage

  # publish snapshots
  publish-snapshot:
    docker:
      - image: circleci/openjdk:8-jdk-browsers

    steps:
      - checkout

      # allows circle to sign artifacts
      - run:
          name: Generate signing key
          command: scripts/generate-signing-key.sh

      - run:
          name: Upload archives to maven repository
          command: ./gradlew --info --refresh-dependencies clean uploadArchives

  # publish releases
  publish-release:
    docker:
      - image: circleci/openjdk:8-jdk-browsers

    steps:
      - checkout

      # allows circle to sign artifacts
      - run:
          name: Generate signing key
          command: scripts/generate-signing-key.sh

      - run:
          name: Upload archives to maven repository
          command: ./gradlew --info --refresh-dependencies clean uploadArchives

      - run:
          name: Close and release artifacts
          command: ./gradlew --info closeAndReleaseRepository

workflows:
  version: 2

  # for non-snapshot/release commits, build the project but do not publish it
  verify:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - develop
                - release

  # publish a snapshot for commits on develop
  publish-snapshot:
    jobs:
      - build:
          filters:
            branches:
              only: develop
      - publish-snapshot:
          requires:
            - build
          filters:
            branches:
              only: develop

  # publish a release for commits tagged with a version
  publish-release:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*/
      - publish-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*/

